services:
  proxy:
    image: nginx:1.26
    container_name: proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./maps360:/usr/share/nginx/html/maps360:ro
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - outside
      - sfedu-map

  database:
    image: postgres:17.5
    container_name: database
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
     - ./backup.sql:/docker-entrypoint-initdb.d/backup.sql
     - ./backupUsers.sql:/docker-entrypoint-initdb.d/abackupUsers.sql
    networks:
      - sfedu-map

  backend:
    build: 
      context: backend
    container_name: backend
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/api/healthz >/dev/null || exit 1"]
      interval: 90s
      timeout: 5s
      retries: 3
      start_period: 15s
    depends_on:
      database:
        condition: service_healthy
    networks:
      - sfedu-map

  frontend:
    build: 
      context: ./react-front
    container_name: frontend
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - sfedu-map

networks:
  sfedu-map:
    name: sfedu-map
    driver: bridge
    internal: true

  outside:
    name: outside
    driver: bridge